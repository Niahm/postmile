{
  "name": "hapi-jar",
  "description": "Cookie jar plugin",
  "version": "0.0.5",
  "author": {
    "name": "Eran Hammer",
    "email": "eran@hueniverse.com",
    "url": "http://hueniverse.com"
  },
  "contributors": [],
  "repository": {
    "type": "git",
    "url": "git://github.com/walmartlabs/jar"
  },
  "main": "index",
  "keywords": [
    "hapi",
    "plugin",
    "cookies",
    "jar",
    "session"
  ],
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "hoek": "0.4.x"
  },
  "devDependencies": {
    "hapi": "0.x.x",
    "mocha": "1.x.x",
    "chai": "1.x.x"
  },
  "scripts": {
    "test": "make test && make unit"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "http://github.com/hueniverse/jar/raw/master/LICENSE"
    }
  ],
  "hapi": {
    "plugin": "1.x.x"
  },
  "readme": "<a href=\"https://github.com/walmartlabs/blammo\"><img src=\"https://raw.github.com/walmartlabs/blammo/master/images/from.png\" align=\"right\" /></a>\r\n![jar Logo](/images/jar.png)\r\n\r\nA [**hapi**](https://github.com/walmartlabs/hapi) cookie jar\r\n\r\n[![Build Status](https://secure.travis-ci.org/walmartlabs/jar.png)](http://travis-ci.org/walmartlabs/jar)\r\n\r\nThe jar plugin adds a simple was to set a persistant state (using an [Iron](https://github.com/hueniverse/iron) encrypted cookie) across requests.\r\nIt is not designed for session management but to supplement an active session with transactional information.\r\n\r\nFor example, the first handler sets the jar context and the second utilizes it:\r\n```javascript\r\nvar handler1 = function () {\r\n\r\n    this.plugins.jar = {\r\n        key: 'value'\r\n    };\r\n    \r\n    return this.reply();\r\n};\r\n\r\nvar handler2 = function () {\r\n\r\n    this.reply(this.plugins.jar.key);     // Will send back 'value'\r\n};\r\n```\r\n\r\nThe plugin requires a password for encryption, and the `ext` permission:\r\n```javascript\r\nvar options = {\r\n    permissions: {\r\n        ext: true                   // Required\r\n    },\r\n    plugin: {\r\n        name: 'jar' ,               // Optional, overrides cookie name. Defaults to 'jar'. Doesn't affect 'plugins.jar'.\r\n        isSingleUse: false,         // Optional, clears jar after one request. Defaults to false.\r\n        options: {\r\n            password: 'password',   // Required\r\n            isSecure: true          // Optional, any supported cookie options except `encoding`\r\n        }\r\n    }\r\n};\r\n\r\nvar server = new Hapi.Server();\r\n\r\nserver.plugin().require('hapi-jar', options, function (err) { });\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "hapi-jar@0.0.5",
  "_from": "hapi-jar@0.0.x"
}
